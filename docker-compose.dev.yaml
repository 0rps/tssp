version: "3.3"

services:
  mongodb:
    env_file:
      - .env
    image: mongo:4.4
    container_name: sspmongodb
    restart: unless-stopped
    volumes:
      - db-data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongoexpress
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017

  redis:
    image: redis:6.2.11
    ports:
      - "6379:6379"

  celery:
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    container_name: sspcelery
    command: celery --app app.celery_app worker --loglevel=info -c 1
    volumes:
      - ./backend:/app/
    depends_on:
      - redis
      - mongodb

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    container_name: sspback
    command: /start.sh
    volumes:
      - ./backend:/app/
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "8082:80"
    depends_on:
      - redis
      - mongodb
      - celery

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: sspfront
    stdin_open: true
    tty: true
    depends_on:
      - backend
    ports:
      - '4200:4200'
    volumes:
      - ./frontend:/app
      - /app/node_modules

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./resources/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "7000:3000"
    volumes:
      - ./resources/monitoring/grafana.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./resources/monitoring/dashboards/:/etc/grafana/provisioning/dashboards/

  dsp.test:
    build:
      context: test_dsp
    stop_signal: SIGINT
    ports:
      - '8091:8000'

volumes:
  db-data:
